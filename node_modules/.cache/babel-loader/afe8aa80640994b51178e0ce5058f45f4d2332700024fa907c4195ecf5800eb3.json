{"ast":null,"code":"var _jsxFileName = \"/home/mungaii/Desktop/MUNGAII/MUNGAII/Web Dev/GitHub-Projects/withrobotfriends/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport SearchBox from './SearchBox';\nimport CardList from './CardList';\nimport { robots } from './robots';\n\n// Introducing State\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    // Function that exectutes the 'searchfield' state\n    this.onSearchChange = event => {\n      this.setState({\n        searchfield: event.target.value\n      });\n    };\n    this.state = {\n      robots: [],\n      searchfield: ''\n    };\n  }\n\n  // Introducing a Lifecycle Method so as to have ability to intergarate a users API\n  // NB: Life-cycle Methods don't have the same syntax as arrow functions\n  // componentDidMount executes after render function\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json()).then(users => this.setState({\n      robots: users\n    }));\n  }\n  render() {\n    // App Component(parent), filteres robots based on SearchBox input\n    const filteredRobots = this.state.robots.filter((robot, i) => {\n      return robots[i].name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tc bg-lightest-red\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"WithRobotFriends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        searchChange: this.onSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardList, {\n        robots: filteredRobots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","SearchBox","CardList","robots","jsxDEV","_jsxDEV","App","constructor","onSearchChange","event","setState","searchfield","target","value","state","componentDidMount","fetch","then","response","json","users","render","filteredRobots","filter","robot","i","name","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","searchChange"],"sources":["/home/mungaii/Desktop/MUNGAII/MUNGAII/Web Dev/GitHub-Projects/withrobotfriends/src/App.js"],"sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport SearchBox from './SearchBox';\nimport CardList from './CardList';\nimport { robots } from './robots';\n\n\n// Introducing State\nclass App extends Component{\n    constructor(){\n        super();\n        this.state={\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    // Introducing a Lifecycle Method so as to have ability to intergarate a users API\n    // NB: Life-cycle Methods don't have the same syntax as arrow functions\n    // componentDidMount executes after render function\n    componentDidMount(){\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n        .then((response) => response.json())\n        .then((users) => this.setState({robots: users}))\n    }\n\n    // Function that exectutes the 'searchfield' state\n    onSearchChange = (event) => {\n        this.setState({searchfield: event.target.value})\n    }\n\n\n    render(){\n        // App Component(parent), filteres robots based on SearchBox input\n        const filteredRobots = this.state.robots.filter((robot, i) => {\n            return robots[i].name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n        })\n\n        return(\n            <div className='tc bg-lightest-red'>\n                <h1>WithRobotFriends</h1>\n                <SearchBox searchChange = {this.onSearchChange} />\n                <CardList robots = {filteredRobots}/>\n            </div>\n        )\n    }\n}\n\nexport default App;\n\n\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,MAAM,QAAQ,UAAU;;AAGjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,GAAG,SAASN,SAAS;EACvBO,WAAWA,CAAA,EAAE;IACT,KAAK,CAAC,CAAC;IAgBX;IAAA,KACAC,cAAc,GAAIC,KAAK,IAAK;MACxB,IAAI,CAACC,QAAQ,CAAC;QAACC,WAAW,EAAEF,KAAK,CAACG,MAAM,CAACC;MAAK,CAAC,CAAC;IACpD,CAAC;IAlBG,IAAI,CAACC,KAAK,GAAC;MACPX,MAAM,EAAE,EAAE;MACVQ,WAAW,EAAE;IACjB,CAAC;EACL;;EAEA;EACA;EACA;EACAI,iBAAiBA,CAAA,EAAE;IACfC,KAAK,CAAC,4CAA4C,CAAC,CAClDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,KAAK,IAAK,IAAI,CAACV,QAAQ,CAAC;MAACP,MAAM,EAAEiB;IAAK,CAAC,CAAC,CAAC;EACpD;EAQAC,MAAMA,CAAA,EAAE;IACJ;IACA,MAAMC,cAAc,GAAG,IAAI,CAACR,KAAK,CAACX,MAAM,CAACoB,MAAM,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAK;MAC1D,OAAOtB,MAAM,CAACsB,CAAC,CAAC,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACd,KAAK,CAACH,WAAW,CAACgB,WAAW,CAAC,CAAC,CAAC;IACtF,CAAC,CAAC;IAEF,oBACItB,OAAA;MAAKwB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBAC/BzB,OAAA;QAAAyB,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzB7B,OAAA,CAACJ,SAAS;QAACkC,YAAY,EAAI,IAAI,CAAC3B;MAAe;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClD7B,OAAA,CAACH,QAAQ;QAACC,MAAM,EAAImB;MAAe;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAEd;AACJ;AAEA,eAAe5B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}